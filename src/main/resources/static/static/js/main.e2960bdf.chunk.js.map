{"version":3,"sources":["App.js","components/Edit.js","components/Create.js","components/Show.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","contacts","_this2","axios","get","then","res","setState","data","react_default","a","createElement","class","Link","to","aria-hidden","map","c","concat","id","name","address","Component","Edit","onChange","e","contact","target","value","onSubmit","preventDefault","_this$state$contact","city","postalCode","phone","put","match","params","result","history","push","console","log","for","type","placeholder","email","Create","_this$state","post","_this$state2","Show","_this3","delete","onClick","bind","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","Route","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e2960bdf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {Link} from \"react-router-dom\";\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    \n    this.state = {\n      contacts: [],\n    }\n  }\n\n  componentDidMount(){\n    axios.get('/contacts').then(res => {\n      this.setState({contacts: res.data});\n    })\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n      <div class=\"panel panel-default\">\n        <div class=\"panel-heading\">\n          <h3 class=\"panel-title\">\n            CONTACTS LIST\n          </h3>\n        </div>\n        <div class=\"panel-body\">\n          <h4><Link to=\"/create\"><span class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span> Add Contact</Link></h4>\n          <table class=\"table table-stripe\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Address</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.contacts.map(c =>\n                <tr>\n                  <td><Link to={`/show/${c.id}`}>{c.name}</Link></td>\n                  <td>{c.address}</td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Edit extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      contact: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/contacts/'+this.props.match.params.id)\n      .then(res => {\n        this.setState({ contact: res.data });\n        console.log(this.state.contact);\n      });\n  }\n\n  onChange = (e) => {\n    const state = this.state.contact\n    state[e.target.name] = e.target.value;\n    this.setState({contact:state});\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, address, city, postalCode, phone } = this.state.contact;\n\n    axios.put('/contacts/'+this.props.match.params.id, { name, address, city, postalCode, phone })\n      .then((result) => {\n        this.props.history.push(\"/show/\"+this.props.match.params.id)\n      });\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">\n              EDIT Contact\n            </h3>\n          </div>\n          <div class=\"panel-body\">\n            <h4><Link to={`/show/${this.state.contact.id}`}><span class=\"glyphicon glyphicon-eye-open\" aria-hidden=\"true\"></span> Contact List</Link></h4>\n            \n            <form onSubmit={this.onSubmit}>\n              <div class=\"form-group\">\n                <label for=\"name\">Name:</label>\n                <input type=\"text\" class=\"form-control\" name=\"name\" value={this.state.contact.name} onChange={this.onChange} placeholder=\"Name\" />\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"title\">Address:</label>\n                <input type=\"text\" class=\"form-control\" name=\"address\" value={this.state.contact.address} onChange={this.onChange} placeholder=\"Address\" />\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"author\">City:</label>\n                <input type=\"text\" class=\"form-control\" name=\"city\" value={this.state.contact.city} onChange={this.onChange} placeholder=\"City\" />\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"published_date\">Phone Number:</label>\n                <input type=\"text\" class=\"form-control\" name=\"phone\" value={this.state.contact.phone} onChange={this.onChange} placeholder=\"Phone Number\" />\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"description\">Email:</label>\n                <input type=\"email\" class=\"form-control\" name=\"email\" value={this.state.contact.email} onChange={this.onChange} placeholder=\"Email Address\" />\n              </div>\n\n              <button type=\"submit\" class=\"btn btn-default\">Update</button>\n              \n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Edit;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Create extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      address: '',\n      city: '',\n      phone: '',\n      email: ''\n    };\n  }\n  onChange = (e) => {\n    const state = this.state\n    state[e.target.name] = e.target.value;\n    this.setState(state);\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, address, city, phone, email } = this.state;\n\n    axios.post('/contacts', { name, address, city, phone, email })\n      .then((result) => {\n        this.props.history.push(\"/\")\n      });\n  }\n\n  render() {\n    const { name, address, city, phone, email } = this.state;\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">\n              ADD CONTACT\n            </h3>\n          </div>\n          <div class=\"panel-body\">\n          \n            <h4><Link to=\"/\"><span class=\"glyphicon glyphicon-th-list\" aria-hidden=\"true\"></span> Contacts List</Link></h4>\n\n            <form onSubmit={this.onSubmit}>\n              <div class=\"form-group\">\n                <label for=\"isbn\">Name:</label>\n                <input type=\"text\" class=\"form-control\" name=\"name\" value={name} onChange={this.onChange} placeholder=\"Name\" />\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"title\">Address:</label>\n                <input type=\"text\" class=\"form-control\" name=\"address\" value={address} onChange={this.onChange} placeholder=\"Address\" />\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"author\">City:</label>\n                <input type=\"text\" class=\"form-control\" name=\"city\" value={city} onChange={this.onChange} placeholder=\"City\" />\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"published_date\">Phone:</label>\n                <input type=\"text\" class=\"form-control\" name=\"phone\" value={phone} onChange={this.onChange} placeholder=\"Phone Number\" />\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"publisher\">Email:</label>\n                <input type=\"email\" class=\"form-control\" name=\"email\" value={email} onChange={this.onChange} placeholder=\"Email Address\" />\n              </div>\n\n              <button type=\"submit\" class=\"btn btn-default\">Submit</button>\n\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Create;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Show extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      contact: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/contacts/'+this.props.match.params.id)\n      .then(res => {\n        this.setState({ contact: res.data });\n        console.log(this.state.contact);\n      });\n  }\n\n  delete(id){\n    console.log(id);\n    axios.delete('/contacts/'+id)\n      .then((result) => {\n        this.props.history.push(\"/\")\n      });\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">\n              Contact Details\n            </h3>\n          </div>\n          <div class=\"panel-body\">\n\n            <h4><Link to=\"/\"><span class=\"glyphicon glyphicon-th-list\" aria-hidden=\"true\"></span> Contacts List</Link></h4>\n            \n            <dl>\n              <dt>Name:</dt>\n\n              <dd>{this.state.contact.name}</dd>\n\n              <dt>Address:</dt>\n\n              <dd>{this.state.contact.address}</dd>\n              \n              <dt>City:</dt>\n\n              <dd>{this.state.contact.city}</dd>\n\n              <dt>Phone Number:</dt>\n\n              <dd>{this.state.contact.phone}</dd>\n\n              <dt>Email Address:</dt>\n\n              <dd>{this.state.contact.email}</dd>\n            </dl>\n\n            <Link to={`/edit/${this.state.contact.id}`} class=\"btn btn-success\">Edit</Link>&nbsp;\n            \n            <button onClick={this.delete.bind(this, this.state.contact.id)} class=\"btn btn-danger\">Delete</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Show;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Edit from './components/Edit';\nimport Create from './components/Create';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Show from './components/Show';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\n\nReactDOM.render(\n    (<Router>\n    <div>\n        <Route exact path='/' component={App}/>\n        <Route path='/edit/:id' component={Edit}/>\n        <Route path='/create' component={Create}/>\n        <Route path='/show/:id' component={Show}/>\n    </div>\n</Router>), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}